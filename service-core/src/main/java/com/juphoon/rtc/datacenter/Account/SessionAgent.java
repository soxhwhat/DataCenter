//
// ****************************************************************
// Copyright(c) 2008-2013 uvisual,inc. All rights reserved.
// ****************************************************************
//
// Auto generated from: AccountPub2.def
// Warning: do not edit this file.
//
package com.juphoon.rtc.datacenter.Account;

public final class SessionAgent {
    public final Common.ObjectAgent __agent;

    public SessionAgent(Common.ObjectAgent agent) {
        this.__agent = agent;
    }

    public final boolean getUserId(Common.Holder.String userId,final Common.CallParams __params) {
        return getUserId(__agent,userId,__params);
    }

    public final void getUserId_begin(final Common.AgentAsync __async,final Common.CallParams __params,final Object __userdata) {
        getUserId_begin(__agent,__async,__params,__userdata);
    }

    public static final boolean getUserId(final Common.ObjectAgent __agent,Common.Holder.String userId,final Common.CallParams __params) {
        try {
        int __loop = 0;
        while (true) {
            Common.OputStream __oput = new Common.OputStream();
            Common.VerList __vers = __agent.verList("getUserId.Session.Account");
            short __ver = 0;
            if (__vers != null) {
                __ver = __vers.ver(true);
                if (__ver > 0) __ver = 0;
            }
            switch (__ver) {
            case 0:
                __oput.write((short)1);
                __oput.write((short)__ver);
                break;
            default: throw new Common.Exception("agent-error:ver error");
            }
            Common.IputStream.Holder __iput = new Common.IputStream.Holder();
            int __rslt = __agent.ex_sync("getUserId.Session.Account",__oput,__iput,__params);
            if ((__rslt>>16) != 0) {
                assert((__rslt>>16) == 1); 
                __loop ++;if (__loop >= 3) throw new Common.Exception("agent-error:vers error");
                continue;
            }
            boolean __ret;
            switch (__rslt) {
            case 0:
                __ret = __iput.value.readBool();
                if (userId == null) userId = new Common.Holder.String();userId.value = __iput.value.readString();
                break;
            default: throw new Common.Exception("agent-error:vers error");
            }
            Common.ObjectAgent.processFinal(__iput.value);
            return __ret;
        }
        }
        catch (Common.Exception ex) {
            Common.ObjectAgent.processFinal(ex);
            if (userId != null) userId.value = "";
            return false;
        }
    }

    public static final void getUserId_begin(final Common.ObjectAgent __agent,final Common.AgentAsync __async,final Common.CallParams __params,final Object __userdata) {
        (new Common.AgentAsync() {
            public final void start() {
                try {
                    Common.OputStream __oput = new Common.OputStream();
                    Common.VerList __vers = __agent.verList("getUserId.Session.Account");
                    short __ver = 0;
                    if (__vers != null) {
                        __ver = __vers.ver(true);
                        if (__ver > 0) __ver = 0;
                    }
                    switch (__ver) {
                    case 0:
                        __oput.write((short)1);
                        __oput.write((short)__ver);
                        break;
                    default: throw new Common.Exception("agent-error:vers error");
                    }
                    __agent.ex_async(this,"getUserId.Session.Account",__oput,__params,0);
                }
                catch (Common.Exception ex) {
                    if (__async != null) Common.ObjectAgent.throwException(__async,ex,__userdata);
                }
            }
            public final void cmdResult(int __rslt,Common.IputStream __iput,Object __userdata) {
                if ((__rslt>>16)!=1) {
                    if (__async != null) __async.cmdResult(__rslt,__iput,__userdata);
                    return;
                }
                __loop ++;
                if (__loop >= 3) {
                    if (__async != null) Common.ObjectAgent.throwException(__async,new Common.Exception("agent-error:vers error"),__userdata);
                    return;
                }
                start();
            }
            private int __loop = 0;
        }).start();
    }

    public static final boolean getUserId_end(int __rslt,Common.IputStream __iput,Common.Holder.String userId) {
        try {
            Common.ObjectAgent.processFirst(__rslt,__iput);
            assert((__rslt>>16) == 0);
            boolean __ret;
            switch (__rslt) {
            case 0:
                __ret = __iput.readBool();
                if (userId == null) userId = new Common.Holder.String();userId.value = __iput.readString();
                break;
            default: throw new Common.Exception("agent-error:vers error");
            }
            Common.ObjectAgent.processFinal(__iput);
            return __ret;
        }
        catch (Common.Exception ex) {
            Common.ObjectAgent.processFinal(ex);
            if (userId != null) userId.value = "";
            return false;
        }
    }

    public final boolean sendOnlineMessage(final String type,final java.util.Map<String,String > params,final byte[] message,final Common.CallParams __params) {
        return sendOnlineMessage(__agent,type,params,message,__params);
    }

    public final void sendOnlineMessage_begin(final Common.AgentAsync __async,final String type,final java.util.Map<String,String > params,final byte[] message,final Common.CallParams __params,final Object __userdata) {
        sendOnlineMessage_begin(__agent,__async,type,params,message,__params,__userdata);
    }

    public static final boolean sendOnlineMessage(final Common.ObjectAgent __agent,final String type,final java.util.Map<String,String > params,final byte[] message,final Common.CallParams __params) {
        try {
        int __loop = 0;
        while (true) {
            Common.OputStream __oput = new Common.OputStream();
            Common.VerList __vers = __agent.verList("sendOnlineMessage.Session.Account");
            short __ver = 0;
            if (__vers != null) {
                __ver = __vers.ver(true);
                if (__ver > 0) __ver = 0;
            }
            switch (__ver) {
            case 0:
                __oput.write((short)1);
                __oput.write((short)__ver);
                __oput.write(type);
                Common.StrStrMap.__write(__oput,params);
                __oput.write(message);
                break;
            default: throw new Common.Exception("agent-error:ver error");
            }
            Common.IputStream.Holder __iput = new Common.IputStream.Holder();
            int __rslt = __agent.ex_sync("sendOnlineMessage.Session.Account",__oput,__iput,__params);
            if ((__rslt>>16) != 0) {
                assert((__rslt>>16) == 1); 
                __loop ++;if (__loop >= 3) throw new Common.Exception("agent-error:vers error");
                continue;
            }
            boolean __ret;
            switch (__rslt) {
            case 0:
                __ret = __iput.value.readBool();
                break;
            default: throw new Common.Exception("agent-error:vers error");
            }
            Common.ObjectAgent.processFinal(__iput.value);
            return __ret;
        }
        }
        catch (Common.Exception ex) {
            Common.ObjectAgent.processFinal(ex);
            return false;
        }
    }

    public static final void sendOnlineMessage_begin(final Common.ObjectAgent __agent,final Common.AgentAsync __async,final String type,final java.util.Map<String,String > params,final byte[] message,final Common.CallParams __params,final Object __userdata) {
        (new Common.AgentAsync() {
            public final void start() {
                try {
                    Common.OputStream __oput = new Common.OputStream();
                    Common.VerList __vers = __agent.verList("sendOnlineMessage.Session.Account");
                    short __ver = 0;
                    if (__vers != null) {
                        __ver = __vers.ver(true);
                        if (__ver > 0) __ver = 0;
                    }
                    switch (__ver) {
                    case 0:
                        __oput.write((short)1);
                        __oput.write((short)__ver);
                        __oput.write(type);
                        Common.StrStrMap.__write(__oput,params);
                        __oput.write(message);
                        break;
                    default: throw new Common.Exception("agent-error:vers error");
                    }
                    __agent.ex_async(this,"sendOnlineMessage.Session.Account",__oput,__params,0);
                }
                catch (Common.Exception ex) {
                    if (__async != null) Common.ObjectAgent.throwException(__async,ex,__userdata);
                }
            }
            public final void cmdResult(int __rslt,Common.IputStream __iput,Object __userdata) {
                if ((__rslt>>16)!=1) {
                    if (__async != null) __async.cmdResult(__rslt,__iput,__userdata);
                    return;
                }
                __loop ++;
                if (__loop >= 3) {
                    if (__async != null) Common.ObjectAgent.throwException(__async,new Common.Exception("agent-error:vers error"),__userdata);
                    return;
                }
                start();
            }
            private int __loop = 0;
        }).start();
    }

    public static final boolean sendOnlineMessage_end(int __rslt,Common.IputStream __iput) {
        try {
            Common.ObjectAgent.processFirst(__rslt,__iput);
            assert((__rslt>>16) == 0);
            boolean __ret;
            switch (__rslt) {
            case 0:
                __ret = __iput.readBool();
                break;
            default: throw new Common.Exception("agent-error:vers error");
            }
            Common.ObjectAgent.processFinal(__iput);
            return __ret;
        }
        catch (Common.Exception ex) {
            Common.ObjectAgent.processFinal(ex);
            return false;
        }
    }

    public final boolean getProp(final String name,Common.Holder.String prop,final Common.CallParams __params) {
        return getProp(__agent,name,prop,__params);
    }

    public final void getProp_begin(final Common.AgentAsync __async,final String name,final Common.CallParams __params,final Object __userdata) {
        getProp_begin(__agent,__async,name,__params,__userdata);
    }

    public static final boolean getProp(final Common.ObjectAgent __agent,final String name,Common.Holder.String prop,final Common.CallParams __params) {
        try {
        int __loop = 0;
        while (true) {
            Common.OputStream __oput = new Common.OputStream();
            Common.VerList __vers = __agent.verList("getProp.Session.Account");
            short __ver = 0;
            if (__vers != null) {
                __ver = __vers.ver(true);
                if (__ver > 0) __ver = 0;
            }
            switch (__ver) {
            case 0:
                __oput.write((short)1);
                __oput.write((short)__ver);
                __oput.write(name);
                break;
            default: throw new Common.Exception("agent-error:ver error");
            }
            Common.IputStream.Holder __iput = new Common.IputStream.Holder();
            int __rslt = __agent.ex_sync("getProp.Session.Account",__oput,__iput,__params);
            if ((__rslt>>16) != 0) {
                assert((__rslt>>16) == 1); 
                __loop ++;if (__loop >= 3) throw new Common.Exception("agent-error:vers error");
                continue;
            }
            boolean __ret;
            switch (__rslt) {
            case 0:
                __ret = __iput.value.readBool();
                if (prop == null) prop = new Common.Holder.String();prop.value = __iput.value.readString();
                break;
            default: throw new Common.Exception("agent-error:vers error");
            }
            Common.ObjectAgent.processFinal(__iput.value);
            return __ret;
        }
        }
        catch (Common.Exception ex) {
            Common.ObjectAgent.processFinal(ex);
            if (prop != null) prop.value = "";
            return false;
        }
    }

    public static final void getProp_begin(final Common.ObjectAgent __agent,final Common.AgentAsync __async,final String name,final Common.CallParams __params,final Object __userdata) {
        (new Common.AgentAsync() {
            public final void start() {
                try {
                    Common.OputStream __oput = new Common.OputStream();
                    Common.VerList __vers = __agent.verList("getProp.Session.Account");
                    short __ver = 0;
                    if (__vers != null) {
                        __ver = __vers.ver(true);
                        if (__ver > 0) __ver = 0;
                    }
                    switch (__ver) {
                    case 0:
                        __oput.write((short)1);
                        __oput.write((short)__ver);
                        __oput.write(name);
                        break;
                    default: throw new Common.Exception("agent-error:vers error");
                    }
                    __agent.ex_async(this,"getProp.Session.Account",__oput,__params,0);
                }
                catch (Common.Exception ex) {
                    if (__async != null) Common.ObjectAgent.throwException(__async,ex,__userdata);
                }
            }
            public final void cmdResult(int __rslt,Common.IputStream __iput,Object __userdata) {
                if ((__rslt>>16)!=1) {
                    if (__async != null) __async.cmdResult(__rslt,__iput,__userdata);
                    return;
                }
                __loop ++;
                if (__loop >= 3) {
                    if (__async != null) Common.ObjectAgent.throwException(__async,new Common.Exception("agent-error:vers error"),__userdata);
                    return;
                }
                start();
            }
            private int __loop = 0;
        }).start();
    }

    public static final boolean getProp_end(int __rslt,Common.IputStream __iput,Common.Holder.String prop) {
        try {
            Common.ObjectAgent.processFirst(__rslt,__iput);
            assert((__rslt>>16) == 0);
            boolean __ret;
            switch (__rslt) {
            case 0:
                __ret = __iput.readBool();
                if (prop == null) prop = new Common.Holder.String();prop.value = __iput.readString();
                break;
            default: throw new Common.Exception("agent-error:vers error");
            }
            Common.ObjectAgent.processFinal(__iput);
            return __ret;
        }
        catch (Common.Exception ex) {
            Common.ObjectAgent.processFinal(ex);
            if (prop != null) prop.value = "";
            return false;
        }
    }

    public final boolean setProp(final String name,final String prop,Common.Holder.String oldProp,final Common.CallParams __params) {
        return setProp(__agent,name,prop,oldProp,__params);
    }

    public final void setProp_begin(final Common.AgentAsync __async,final String name,final String prop,final Common.CallParams __params,final Object __userdata) {
        setProp_begin(__agent,__async,name,prop,__params,__userdata);
    }

    public static final boolean setProp(final Common.ObjectAgent __agent,final String name,final String prop,Common.Holder.String oldProp,final Common.CallParams __params) {
        try {
        int __loop = 0;
        while (true) {
            Common.OputStream __oput = new Common.OputStream();
            Common.VerList __vers = __agent.verList("setProp.Session.Account");
            short __ver = 0;
            if (__vers != null) {
                __ver = __vers.ver(true);
                if (__ver > 0) __ver = 0;
            }
            switch (__ver) {
            case 0:
                __oput.write((short)1);
                __oput.write((short)__ver);
                __oput.write(name);
                __oput.write(prop);
                break;
            default: throw new Common.Exception("agent-error:ver error");
            }
            Common.IputStream.Holder __iput = new Common.IputStream.Holder();
            int __rslt = __agent.ex_sync("setProp.Session.Account",__oput,__iput,__params);
            if ((__rslt>>16) != 0) {
                assert((__rslt>>16) == 1); 
                __loop ++;if (__loop >= 3) throw new Common.Exception("agent-error:vers error");
                continue;
            }
            boolean __ret;
            switch (__rslt) {
            case 0:
                __ret = __iput.value.readBool();
                if (oldProp == null) oldProp = new Common.Holder.String();oldProp.value = __iput.value.readString();
                break;
            default: throw new Common.Exception("agent-error:vers error");
            }
            Common.ObjectAgent.processFinal(__iput.value);
            return __ret;
        }
        }
        catch (Common.Exception ex) {
            Common.ObjectAgent.processFinal(ex);
            if (oldProp != null) oldProp.value = "";
            return false;
        }
    }

    public static final void setProp_begin(final Common.ObjectAgent __agent,final Common.AgentAsync __async,final String name,final String prop,final Common.CallParams __params,final Object __userdata) {
        (new Common.AgentAsync() {
            public final void start() {
                try {
                    Common.OputStream __oput = new Common.OputStream();
                    Common.VerList __vers = __agent.verList("setProp.Session.Account");
                    short __ver = 0;
                    if (__vers != null) {
                        __ver = __vers.ver(true);
                        if (__ver > 0) __ver = 0;
                    }
                    switch (__ver) {
                    case 0:
                        __oput.write((short)1);
                        __oput.write((short)__ver);
                        __oput.write(name);
                        __oput.write(prop);
                        break;
                    default: throw new Common.Exception("agent-error:vers error");
                    }
                    __agent.ex_async(this,"setProp.Session.Account",__oput,__params,0);
                }
                catch (Common.Exception ex) {
                    if (__async != null) Common.ObjectAgent.throwException(__async,ex,__userdata);
                }
            }
            public final void cmdResult(int __rslt,Common.IputStream __iput,Object __userdata) {
                if ((__rslt>>16)!=1) {
                    if (__async != null) __async.cmdResult(__rslt,__iput,__userdata);
                    return;
                }
                __loop ++;
                if (__loop >= 3) {
                    if (__async != null) Common.ObjectAgent.throwException(__async,new Common.Exception("agent-error:vers error"),__userdata);
                    return;
                }
                start();
            }
            private int __loop = 0;
        }).start();
    }

    public static final boolean setProp_end(int __rslt,Common.IputStream __iput,Common.Holder.String oldProp) {
        try {
            Common.ObjectAgent.processFirst(__rslt,__iput);
            assert((__rslt>>16) == 0);
            boolean __ret;
            switch (__rslt) {
            case 0:
                __ret = __iput.readBool();
                if (oldProp == null) oldProp = new Common.Holder.String();oldProp.value = __iput.readString();
                break;
            default: throw new Common.Exception("agent-error:vers error");
            }
            Common.ObjectAgent.processFinal(__iput);
            return __ret;
        }
        catch (Common.Exception ex) {
            Common.ObjectAgent.processFinal(ex);
            if (oldProp != null) oldProp.value = "";
            return false;
        }
    }

    public final boolean getProps(final java.util.List<String > names,Common.StrStrMap.Holder props,final Common.CallParams __params) {
        return getProps(__agent,names,props,__params);
    }

    public final void getProps_begin(final Common.AgentAsync __async,final java.util.List<String > names,final Common.CallParams __params,final Object __userdata) {
        getProps_begin(__agent,__async,names,__params,__userdata);
    }

    public static final boolean getProps(final Common.ObjectAgent __agent,final java.util.List<String > names,Common.StrStrMap.Holder props,final Common.CallParams __params) {
        try {
        int __loop = 0;
        while (true) {
            Common.OputStream __oput = new Common.OputStream();
            Common.VerList __vers = __agent.verList("getProps.Session.Account");
            short __ver = 0;
            if (__vers != null) {
                __ver = __vers.ver(true);
                if (__ver > 0) __ver = 0;
            }
            switch (__ver) {
            case 0:
                __oput.write((short)1);
                __oput.write((short)__ver);
                Common.StrVec.__write(__oput,names);
                break;
            default: throw new Common.Exception("agent-error:ver error");
            }
            Common.IputStream.Holder __iput = new Common.IputStream.Holder();
            int __rslt = __agent.ex_sync("getProps.Session.Account",__oput,__iput,__params);
            if ((__rslt>>16) != 0) {
                assert((__rslt>>16) == 1); 
                __loop ++;if (__loop >= 3) throw new Common.Exception("agent-error:vers error");
                continue;
            }
            boolean __ret;
            switch (__rslt) {
            case 0:
                __ret = __iput.value.readBool();
                if (props == null) props = new Common.StrStrMap.Holder();props.value = Common.StrStrMap.__read(__iput.value);
                break;
            default: throw new Common.Exception("agent-error:vers error");
            }
            Common.ObjectAgent.processFinal(__iput.value);
            return __ret;
        }
        }
        catch (Common.Exception ex) {
            Common.ObjectAgent.processFinal(ex);
            if (props != null) props.value = null;
            return false;
        }
    }

    public static final void getProps_begin(final Common.ObjectAgent __agent,final Common.AgentAsync __async,final java.util.List<String > names,final Common.CallParams __params,final Object __userdata) {
        (new Common.AgentAsync() {
            public final void start() {
                try {
                    Common.OputStream __oput = new Common.OputStream();
                    Common.VerList __vers = __agent.verList("getProps.Session.Account");
                    short __ver = 0;
                    if (__vers != null) {
                        __ver = __vers.ver(true);
                        if (__ver > 0) __ver = 0;
                    }
                    switch (__ver) {
                    case 0:
                        __oput.write((short)1);
                        __oput.write((short)__ver);
                        Common.StrVec.__write(__oput,names);
                        break;
                    default: throw new Common.Exception("agent-error:vers error");
                    }
                    __agent.ex_async(this,"getProps.Session.Account",__oput,__params,0);
                }
                catch (Common.Exception ex) {
                    if (__async != null) Common.ObjectAgent.throwException(__async,ex,__userdata);
                }
            }
            public final void cmdResult(int __rslt,Common.IputStream __iput,Object __userdata) {
                if ((__rslt>>16)!=1) {
                    if (__async != null) __async.cmdResult(__rslt,__iput,__userdata);
                    return;
                }
                __loop ++;
                if (__loop >= 3) {
                    if (__async != null) Common.ObjectAgent.throwException(__async,new Common.Exception("agent-error:vers error"),__userdata);
                    return;
                }
                start();
            }
            private int __loop = 0;
        }).start();
    }

    public static final boolean getProps_end(int __rslt,Common.IputStream __iput,Common.StrStrMap.Holder props) {
        try {
            Common.ObjectAgent.processFirst(__rslt,__iput);
            assert((__rslt>>16) == 0);
            boolean __ret;
            switch (__rslt) {
            case 0:
                __ret = __iput.readBool();
                if (props == null) props = new Common.StrStrMap.Holder();props.value = Common.StrStrMap.__read(__iput);
                break;
            default: throw new Common.Exception("agent-error:vers error");
            }
            Common.ObjectAgent.processFinal(__iput);
            return __ret;
        }
        catch (Common.Exception ex) {
            Common.ObjectAgent.processFinal(ex);
            if (props != null) props.value = null;
            return false;
        }
    }

    public final boolean getPropsPrefix(final String prefix,Common.StrStrMap.Holder props,final Common.CallParams __params) {
        return getPropsPrefix(__agent,prefix,props,__params);
    }

    public final void getPropsPrefix_begin(final Common.AgentAsync __async,final String prefix,final Common.CallParams __params,final Object __userdata) {
        getPropsPrefix_begin(__agent,__async,prefix,__params,__userdata);
    }

    public static final boolean getPropsPrefix(final Common.ObjectAgent __agent,final String prefix,Common.StrStrMap.Holder props,final Common.CallParams __params) {
        try {
        int __loop = 0;
        while (true) {
            Common.OputStream __oput = new Common.OputStream();
            Common.VerList __vers = __agent.verList("getPropsPrefix.Session.Account");
            short __ver = 0;
            if (__vers != null) {
                __ver = __vers.ver(true);
                if (__ver > 0) __ver = 0;
            }
            switch (__ver) {
            case 0:
                __oput.write((short)1);
                __oput.write((short)__ver);
                __oput.write(prefix);
                break;
            default: throw new Common.Exception("agent-error:ver error");
            }
            Common.IputStream.Holder __iput = new Common.IputStream.Holder();
            int __rslt = __agent.ex_sync("getPropsPrefix.Session.Account",__oput,__iput,__params);
            if ((__rslt>>16) != 0) {
                assert((__rslt>>16) == 1); 
                __loop ++;if (__loop >= 3) throw new Common.Exception("agent-error:vers error");
                continue;
            }
            boolean __ret;
            switch (__rslt) {
            case 0:
                __ret = __iput.value.readBool();
                if (props == null) props = new Common.StrStrMap.Holder();props.value = Common.StrStrMap.__read(__iput.value);
                break;
            default: throw new Common.Exception("agent-error:vers error");
            }
            Common.ObjectAgent.processFinal(__iput.value);
            return __ret;
        }
        }
        catch (Common.Exception ex) {
            Common.ObjectAgent.processFinal(ex);
            if (props != null) props.value = null;
            return false;
        }
    }

    public static final void getPropsPrefix_begin(final Common.ObjectAgent __agent,final Common.AgentAsync __async,final String prefix,final Common.CallParams __params,final Object __userdata) {
        (new Common.AgentAsync() {
            public final void start() {
                try {
                    Common.OputStream __oput = new Common.OputStream();
                    Common.VerList __vers = __agent.verList("getPropsPrefix.Session.Account");
                    short __ver = 0;
                    if (__vers != null) {
                        __ver = __vers.ver(true);
                        if (__ver > 0) __ver = 0;
                    }
                    switch (__ver) {
                    case 0:
                        __oput.write((short)1);
                        __oput.write((short)__ver);
                        __oput.write(prefix);
                        break;
                    default: throw new Common.Exception("agent-error:vers error");
                    }
                    __agent.ex_async(this,"getPropsPrefix.Session.Account",__oput,__params,0);
                }
                catch (Common.Exception ex) {
                    if (__async != null) Common.ObjectAgent.throwException(__async,ex,__userdata);
                }
            }
            public final void cmdResult(int __rslt,Common.IputStream __iput,Object __userdata) {
                if ((__rslt>>16)!=1) {
                    if (__async != null) __async.cmdResult(__rslt,__iput,__userdata);
                    return;
                }
                __loop ++;
                if (__loop >= 3) {
                    if (__async != null) Common.ObjectAgent.throwException(__async,new Common.Exception("agent-error:vers error"),__userdata);
                    return;
                }
                start();
            }
            private int __loop = 0;
        }).start();
    }

    public static final boolean getPropsPrefix_end(int __rslt,Common.IputStream __iput,Common.StrStrMap.Holder props) {
        try {
            Common.ObjectAgent.processFirst(__rslt,__iput);
            assert((__rslt>>16) == 0);
            boolean __ret;
            switch (__rslt) {
            case 0:
                __ret = __iput.readBool();
                if (props == null) props = new Common.StrStrMap.Holder();props.value = Common.StrStrMap.__read(__iput);
                break;
            default: throw new Common.Exception("agent-error:vers error");
            }
            Common.ObjectAgent.processFinal(__iput);
            return __ret;
        }
        catch (Common.Exception ex) {
            Common.ObjectAgent.processFinal(ex);
            if (props != null) props.value = null;
            return false;
        }
    }

    public final boolean setProps(final java.util.Map<String,String > props,final Common.CallParams __params) {
        return setProps(__agent,props,__params);
    }

    public final void setProps_begin(final Common.AgentAsync __async,final java.util.Map<String,String > props,final Common.CallParams __params,final Object __userdata) {
        setProps_begin(__agent,__async,props,__params,__userdata);
    }

    public static final boolean setProps(final Common.ObjectAgent __agent,final java.util.Map<String,String > props,final Common.CallParams __params) {
        try {
        int __loop = 0;
        while (true) {
            Common.OputStream __oput = new Common.OputStream();
            Common.VerList __vers = __agent.verList("setProps.Session.Account");
            short __ver = 0;
            if (__vers != null) {
                __ver = __vers.ver(true);
                if (__ver > 0) __ver = 0;
            }
            switch (__ver) {
            case 0:
                __oput.write((short)1);
                __oput.write((short)__ver);
                Common.StrStrMap.__write(__oput,props);
                break;
            default: throw new Common.Exception("agent-error:ver error");
            }
            Common.IputStream.Holder __iput = new Common.IputStream.Holder();
            int __rslt = __agent.ex_sync("setProps.Session.Account",__oput,__iput,__params);
            if ((__rslt>>16) != 0) {
                assert((__rslt>>16) == 1); 
                __loop ++;if (__loop >= 3) throw new Common.Exception("agent-error:vers error");
                continue;
            }
            boolean __ret;
            switch (__rslt) {
            case 0:
                __ret = __iput.value.readBool();
                break;
            default: throw new Common.Exception("agent-error:vers error");
            }
            Common.ObjectAgent.processFinal(__iput.value);
            return __ret;
        }
        }
        catch (Common.Exception ex) {
            Common.ObjectAgent.processFinal(ex);
            return false;
        }
    }

    public static final void setProps_begin(final Common.ObjectAgent __agent,final Common.AgentAsync __async,final java.util.Map<String,String > props,final Common.CallParams __params,final Object __userdata) {
        (new Common.AgentAsync() {
            public final void start() {
                try {
                    Common.OputStream __oput = new Common.OputStream();
                    Common.VerList __vers = __agent.verList("setProps.Session.Account");
                    short __ver = 0;
                    if (__vers != null) {
                        __ver = __vers.ver(true);
                        if (__ver > 0) __ver = 0;
                    }
                    switch (__ver) {
                    case 0:
                        __oput.write((short)1);
                        __oput.write((short)__ver);
                        Common.StrStrMap.__write(__oput,props);
                        break;
                    default: throw new Common.Exception("agent-error:vers error");
                    }
                    __agent.ex_async(this,"setProps.Session.Account",__oput,__params,0);
                }
                catch (Common.Exception ex) {
                    if (__async != null) Common.ObjectAgent.throwException(__async,ex,__userdata);
                }
            }
            public final void cmdResult(int __rslt,Common.IputStream __iput,Object __userdata) {
                if ((__rslt>>16)!=1) {
                    if (__async != null) __async.cmdResult(__rslt,__iput,__userdata);
                    return;
                }
                __loop ++;
                if (__loop >= 3) {
                    if (__async != null) Common.ObjectAgent.throwException(__async,new Common.Exception("agent-error:vers error"),__userdata);
                    return;
                }
                start();
            }
            private int __loop = 0;
        }).start();
    }

    public static final boolean setProps_end(int __rslt,Common.IputStream __iput) {
        try {
            Common.ObjectAgent.processFirst(__rslt,__iput);
            assert((__rslt>>16) == 0);
            boolean __ret;
            switch (__rslt) {
            case 0:
                __ret = __iput.readBool();
                break;
            default: throw new Common.Exception("agent-error:vers error");
            }
            Common.ObjectAgent.processFinal(__iput);
            return __ret;
        }
        catch (Common.Exception ex) {
            Common.ObjectAgent.processFinal(ex);
            return false;
        }
    }

    public final boolean setPropsCond(final java.util.Map<String,String > conds,final java.util.Map<String,String > props,final Common.CallParams __params) {
        return setPropsCond(__agent,conds,props,__params);
    }

    public final void setPropsCond_begin(final Common.AgentAsync __async,final java.util.Map<String,String > conds,final java.util.Map<String,String > props,final Common.CallParams __params,final Object __userdata) {
        setPropsCond_begin(__agent,__async,conds,props,__params,__userdata);
    }

    public static final boolean setPropsCond(final Common.ObjectAgent __agent,final java.util.Map<String,String > conds,final java.util.Map<String,String > props,final Common.CallParams __params) {
        try {
        int __loop = 0;
        while (true) {
            Common.OputStream __oput = new Common.OputStream();
            Common.VerList __vers = __agent.verList("setPropsCond.Session.Account");
            short __ver = 0;
            if (__vers != null) {
                __ver = __vers.ver(true);
                if (__ver > 0) __ver = 0;
            }
            switch (__ver) {
            case 0:
                __oput.write((short)1);
                __oput.write((short)__ver);
                Common.StrStrMap.__write(__oput,conds);
                Common.StrStrMap.__write(__oput,props);
                break;
            default: throw new Common.Exception("agent-error:ver error");
            }
            Common.IputStream.Holder __iput = new Common.IputStream.Holder();
            int __rslt = __agent.ex_sync("setPropsCond.Session.Account",__oput,__iput,__params);
            if ((__rslt>>16) != 0) {
                assert((__rslt>>16) == 1); 
                __loop ++;if (__loop >= 3) throw new Common.Exception("agent-error:vers error");
                continue;
            }
            boolean __ret;
            switch (__rslt) {
            case 0:
                __ret = __iput.value.readBool();
                break;
            default: throw new Common.Exception("agent-error:vers error");
            }
            Common.ObjectAgent.processFinal(__iput.value);
            return __ret;
        }
        }
        catch (Common.Exception ex) {
            Common.ObjectAgent.processFinal(ex);
            return false;
        }
    }

    public static final void setPropsCond_begin(final Common.ObjectAgent __agent,final Common.AgentAsync __async,final java.util.Map<String,String > conds,final java.util.Map<String,String > props,final Common.CallParams __params,final Object __userdata) {
        (new Common.AgentAsync() {
            public final void start() {
                try {
                    Common.OputStream __oput = new Common.OputStream();
                    Common.VerList __vers = __agent.verList("setPropsCond.Session.Account");
                    short __ver = 0;
                    if (__vers != null) {
                        __ver = __vers.ver(true);
                        if (__ver > 0) __ver = 0;
                    }
                    switch (__ver) {
                    case 0:
                        __oput.write((short)1);
                        __oput.write((short)__ver);
                        Common.StrStrMap.__write(__oput,conds);
                        Common.StrStrMap.__write(__oput,props);
                        break;
                    default: throw new Common.Exception("agent-error:vers error");
                    }
                    __agent.ex_async(this,"setPropsCond.Session.Account",__oput,__params,0);
                }
                catch (Common.Exception ex) {
                    if (__async != null) Common.ObjectAgent.throwException(__async,ex,__userdata);
                }
            }
            public final void cmdResult(int __rslt,Common.IputStream __iput,Object __userdata) {
                if ((__rslt>>16)!=1) {
                    if (__async != null) __async.cmdResult(__rslt,__iput,__userdata);
                    return;
                }
                __loop ++;
                if (__loop >= 3) {
                    if (__async != null) Common.ObjectAgent.throwException(__async,new Common.Exception("agent-error:vers error"),__userdata);
                    return;
                }
                start();
            }
            private int __loop = 0;
        }).start();
    }

    public static final boolean setPropsCond_end(int __rslt,Common.IputStream __iput) {
        try {
            Common.ObjectAgent.processFirst(__rslt,__iput);
            assert((__rslt>>16) == 0);
            boolean __ret;
            switch (__rslt) {
            case 0:
                __ret = __iput.readBool();
                break;
            default: throw new Common.Exception("agent-error:vers error");
            }
            Common.ObjectAgent.processFinal(__iput);
            return __ret;
        }
        catch (Common.Exception ex) {
            Common.ObjectAgent.processFinal(ex);
            return false;
        }
    }

    public final boolean getStatus(Common.Holder.Int status,final Common.CallParams __params) {
        return getStatus(__agent,status,__params);
    }

    public final void getStatus_begin(final Common.AgentAsync __async,final Common.CallParams __params,final Object __userdata) {
        getStatus_begin(__agent,__async,__params,__userdata);
    }

    public static final boolean getStatus(final Common.ObjectAgent __agent,Common.Holder.Int status,final Common.CallParams __params) {
        try {
        int __loop = 0;
        while (true) {
            Common.OputStream __oput = new Common.OputStream();
            Common.VerList __vers = __agent.verList("getStatus.Session.Account");
            short __ver = 0;
            if (__vers != null) {
                __ver = __vers.ver(true);
                if (__ver > 0) __ver = 0;
            }
            switch (__ver) {
            case 0:
                __oput.write((short)1);
                __oput.write((short)__ver);
                break;
            default: throw new Common.Exception("agent-error:ver error");
            }
            Common.IputStream.Holder __iput = new Common.IputStream.Holder();
            int __rslt = __agent.ex_sync("getStatus.Session.Account",__oput,__iput,__params);
            if ((__rslt>>16) != 0) {
                assert((__rslt>>16) == 1); 
                __loop ++;if (__loop >= 3) throw new Common.Exception("agent-error:vers error");
                continue;
            }
            boolean __ret;
            switch (__rslt) {
            case 0:
                __ret = __iput.value.readBool();
                if (status == null) status = new Common.Holder.Int();status.value = __iput.value.readInt();
                break;
            default: throw new Common.Exception("agent-error:vers error");
            }
            Common.ObjectAgent.processFinal(__iput.value);
            return __ret;
        }
        }
        catch (Common.Exception ex) {
            Common.ObjectAgent.processFinal(ex);
            if (status != null) status.value = Status.StatusUnknown;
            return false;
        }
    }

    public static final void getStatus_begin(final Common.ObjectAgent __agent,final Common.AgentAsync __async,final Common.CallParams __params,final Object __userdata) {
        (new Common.AgentAsync() {
            public final void start() {
                try {
                    Common.OputStream __oput = new Common.OputStream();
                    Common.VerList __vers = __agent.verList("getStatus.Session.Account");
                    short __ver = 0;
                    if (__vers != null) {
                        __ver = __vers.ver(true);
                        if (__ver > 0) __ver = 0;
                    }
                    switch (__ver) {
                    case 0:
                        __oput.write((short)1);
                        __oput.write((short)__ver);
                        break;
                    default: throw new Common.Exception("agent-error:vers error");
                    }
                    __agent.ex_async(this,"getStatus.Session.Account",__oput,__params,0);
                }
                catch (Common.Exception ex) {
                    if (__async != null) Common.ObjectAgent.throwException(__async,ex,__userdata);
                }
            }
            public final void cmdResult(int __rslt,Common.IputStream __iput,Object __userdata) {
                if ((__rslt>>16)!=1) {
                    if (__async != null) __async.cmdResult(__rslt,__iput,__userdata);
                    return;
                }
                __loop ++;
                if (__loop >= 3) {
                    if (__async != null) Common.ObjectAgent.throwException(__async,new Common.Exception("agent-error:vers error"),__userdata);
                    return;
                }
                start();
            }
            private int __loop = 0;
        }).start();
    }

    public static final boolean getStatus_end(int __rslt,Common.IputStream __iput,Common.Holder.Int status) {
        try {
            Common.ObjectAgent.processFirst(__rslt,__iput);
            assert((__rslt>>16) == 0);
            boolean __ret;
            switch (__rslt) {
            case 0:
                __ret = __iput.readBool();
                if (status == null) status = new Common.Holder.Int();status.value = __iput.readInt();
                break;
            default: throw new Common.Exception("agent-error:vers error");
            }
            Common.ObjectAgent.processFinal(__iput);
            return __ret;
        }
        catch (Common.Exception ex) {
            Common.ObjectAgent.processFinal(ex);
            if (status != null) status.value = Status.StatusUnknown;
            return false;
        }
    }

    public final boolean kickOff(final String reason,final Common.CallParams __params) {
        return kickOff(__agent,reason,__params);
    }

    public final void kickOff_begin(final Common.AgentAsync __async,final String reason,final Common.CallParams __params,final Object __userdata) {
        kickOff_begin(__agent,__async,reason,__params,__userdata);
    }

    public static final boolean kickOff(final Common.ObjectAgent __agent,final String reason,final Common.CallParams __params) {
        try {
        int __loop = 0;
        while (true) {
            Common.OputStream __oput = new Common.OputStream();
            Common.VerList __vers = __agent.verList("kickOff.Session.Account");
            short __ver = 0;
            if (__vers != null) {
                __ver = __vers.ver(true);
                if (__ver > 0) __ver = 0;
            }
            switch (__ver) {
            case 0:
                __oput.write((short)1);
                __oput.write((short)__ver);
                __oput.write(reason);
                break;
            default: throw new Common.Exception("agent-error:ver error");
            }
            Common.IputStream.Holder __iput = new Common.IputStream.Holder();
            int __rslt = __agent.ex_sync("kickOff.Session.Account",__oput,__iput,__params);
            if ((__rslt>>16) != 0) {
                assert((__rslt>>16) == 1); 
                __loop ++;if (__loop >= 3) throw new Common.Exception("agent-error:vers error");
                continue;
            }
            boolean __ret;
            switch (__rslt) {
            case 0:
                __ret = __iput.value.readBool();
                break;
            default: throw new Common.Exception("agent-error:vers error");
            }
            Common.ObjectAgent.processFinal(__iput.value);
            return __ret;
        }
        }
        catch (Common.Exception ex) {
            Common.ObjectAgent.processFinal(ex);
            return false;
        }
    }

    public static final void kickOff_begin(final Common.ObjectAgent __agent,final Common.AgentAsync __async,final String reason,final Common.CallParams __params,final Object __userdata) {
        (new Common.AgentAsync() {
            public final void start() {
                try {
                    Common.OputStream __oput = new Common.OputStream();
                    Common.VerList __vers = __agent.verList("kickOff.Session.Account");
                    short __ver = 0;
                    if (__vers != null) {
                        __ver = __vers.ver(true);
                        if (__ver > 0) __ver = 0;
                    }
                    switch (__ver) {
                    case 0:
                        __oput.write((short)1);
                        __oput.write((short)__ver);
                        __oput.write(reason);
                        break;
                    default: throw new Common.Exception("agent-error:vers error");
                    }
                    __agent.ex_async(this,"kickOff.Session.Account",__oput,__params,0);
                }
                catch (Common.Exception ex) {
                    if (__async != null) Common.ObjectAgent.throwException(__async,ex,__userdata);
                }
            }
            public final void cmdResult(int __rslt,Common.IputStream __iput,Object __userdata) {
                if ((__rslt>>16)!=1) {
                    if (__async != null) __async.cmdResult(__rslt,__iput,__userdata);
                    return;
                }
                __loop ++;
                if (__loop >= 3) {
                    if (__async != null) Common.ObjectAgent.throwException(__async,new Common.Exception("agent-error:vers error"),__userdata);
                    return;
                }
                start();
            }
            private int __loop = 0;
        }).start();
    }

    public static final boolean kickOff_end(int __rslt,Common.IputStream __iput) {
        try {
            Common.ObjectAgent.processFirst(__rslt,__iput);
            assert((__rslt>>16) == 0);
            boolean __ret;
            switch (__rslt) {
            case 0:
                __ret = __iput.readBool();
                break;
            default: throw new Common.Exception("agent-error:vers error");
            }
            Common.ObjectAgent.processFinal(__iput);
            return __ret;
        }
        catch (Common.Exception ex) {
            Common.ObjectAgent.processFinal(ex);
            return false;
        }
    }
}
