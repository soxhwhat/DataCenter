<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.juphoon.rtc.datacenter.mapper.MonitorAcdQueueCountMapper">
    <resultMap id="BaseResultMap" type="com.juphoon.rtc.datacenter.entity.po.monitor.MonitorAcdQueueCountPO">
        <result column="domainId" jdbcType="INTEGER" property="domainId"/>
        <result column="appId" jdbcType="INTEGER" property="appId"/>
        <result column="queue" jdbcType="VARCHAR" property="queue"/>
        <result column="fromServer" jdbcType="VARCHAR" property="from"/>
        <result column="updateTimestamp" jdbcType="BIGINT" property="timestamp"/>
        <result column="cnt" jdbcType="INTEGER" property="count"/>
        <result column="eventType" jdbcType="INTEGER" property="type"/>
        <result column="eventNumber" jdbcType="INTEGER" property="number"/>
    </resultMap>

    <sql id="Base_Column_List">
    domainId, appId, queue, fromServer, updateTimestamp, cnt, eventType, eventNumber
  </sql>

    <select id="selectSumCountByQueue" parameterType="java.lang.String" resultType="java.lang.Integer">
        select sum(`cnt`)
        from jrtc_monitor_acd_queue_count
        where queue = #{queue, jdbcType=VARCHAR}
    </select>

    <insert id="insert"
            parameterType="com.juphoon.rtc.datacenter.entity.po.monitor.MonitorAcdQueueCountPO">
        insert into jrtc_monitor_acd_queue_count (domainId, appId, queue, fromServer, updateTimestamp, cnt, eventType, eventNumber)
        values (#{domainId,jdbcType=INTEGER}, #{appId,jdbcType=INTEGER}, #{queue,jdbcType=VARCHAR}, #{from,jdbcType=VARCHAR},
          #{timestamp,jdbcType=BIGINT}, #{count,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{number,jdbcType=INTEGER})
  </insert>

    <update id="updateByQueueAndFrom"
            parameterType="com.juphoon.rtc.datacenter.entity.po.monitor.MonitorAcdQueueCountPO">
        update jrtc_monitor_acd_queue_count
        <set>
            updateTimestamp = #{timestamp,jdbcType=BIGINT},
            cnt = #{count,jdbcType=INTEGER}
        </set>
        <where>
            queue = #{queue,jdbcType=VARCHAR} and
            fromServer = #{from,jdbcType=VARCHAR} and
            eventType = #{type,jdbcType=INTEGER} and
            eventNumber = #{number,jdbcType=INTEGER};
        </where>
    </update>

</mapper>