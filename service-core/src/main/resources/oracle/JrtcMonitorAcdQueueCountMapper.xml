<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.juphoon.rtc.datacenter.mapper.JrtcMonitorAcdQueueCountMapper">
    <resultMap id="BaseResultMap" type="com.juphoon.rtc.datacenter.entity.po.monitor.MonitorAcdQueueCountPO">
        <result column="DOMAIN_ID" jdbcType="DECIMAL" property="domainId"/>
        <result column="APP_ID" jdbcType="DECIMAL" property="appId"/>
        <result column="QUEUE" jdbcType="VARCHAR" property="queue"/>
        <result column="FROM" jdbcType="VARCHAR" property="from"/>
        <result column="TIMESTAMP" jdbcType="DECIMAL" property="timestamp"/>
        <result column="COUNT" jdbcType="DECIMAL" property="count"/>
        <result column="TYPE" jdbcType="DECIMAL" property="type"/>
        <result column="NUMBER" jdbcType="DECIMAL" property="number"/>
    </resultMap>

    <sql id="Base_Column_List">
        DOMAIN_ID, APP_ID, QUEUE, `FROM`, `TIMESTAMP`, `COUNT`, `TYPE`, `NUMBER`
    </sql>

    <select id="selectCountByQueue" parameterType="java.lang.String">
        select count(*)
        from JRTC_MONITOR_ACD_QUEUE_COUNT
        where QUEUE = #{queue, jdbcType=VARCHAR}
    </select>

    <insert id="insert" keyColumn="id" keyProperty="id"
            parameterType="com.juphoon.rtc.datacenter.entity.po.monitor.MonitorAcdQueueCountPO" useGeneratedKeys="true">
        insert into JRTC_MONITOR_ACD_QUEUE_COUNT (DOMAIN_ID, APP_ID, QUEUE, `FROM`, `TIMESTAMP`, `COUNT`, `TYPE`, `NUMBER`)
        values (#{domainId,jdbcType=DECIMAL}, #{appId,jdbcType=DECIMAL}, #{queue,jdbcType=VARCHAR}, #{from,jdbcType=VARCHAR},
          #{timestamp,jdbcType=DECIMAL}, #{count,jdbcType=DECIMAL}, #{type,jdbcType=DECIMAL}, #{number,jdbcType=DECIMAL})
    </insert>

    <update id="updateByQueueAndFrom"
            parameterType="com.juphoon.rtc.datacenter.entity.po.monitor.MonitorAcdQueueCountPO">
        update JRTC_MONITOR_ACD_QUEUE_COUNT
        set
          `TIMESTAMP` = #{timestamp,jdbcType=DECIMAL},
          `COUNT` = #{count,jdbcType=DECIMAL}
        where
        QUEUE = #{queue,jdbcType=VARCHAR} and
        `FROM` = #{from,jdbcType=VARCHAR} and
        `TYPE` = #{type,jdbcType=DECIMAL} and
        `NUMBER` = #{number,jdbcType=DECIMAL};
  </update>

</mapper>