#include "Types.def"

module Common 
{
    interface Locator 
    {
        bool updateAdapter(string aid,EndpointVec eps,StrSet cats,StrSet oids) onexception(false);
        bool updateDelegate(string aid,Common.StrSet cloudIds) onexception(false); 
        
        bool locateAdapter(string aid,out StrVec eps,out int mainCount); 
        bool locateCategory(string cat,out StrVec eps,out StrVec aids,out int mainCount); 
        bool locateObject(string oid,out StrVec eps,out StrVec aids,out int mainCount);

        bool broadcastChange(StrVec prefixs,string change) onexception(false);
        bool updateChanges(string name,long ver,out StrSet changes,out long updateVer) onexception(false);
    };

    interface ObjectLocator 
    {
        bool locateObject(string oid,bool nextTime,out string aid) async;
    };

    interface ConfigServer
    {
        bool getConfigs(string name,out StrStrMap configs) onexception(false);
    };

    struct Resource 
    {
        string _identity;
        EndpointVec _endpoints;
        int _freePercent;
    };
    vector ResourceVec<Resource>;
    map ResourceMap<string,Resource>; 
    map TypeResources<string,ResourceVec>;

    interface ResourceServer 
    {
        bool updateResource(string type,Resource resource) onexception(false);
        bool updateResources(ResourceMap resources) onexception(false);

        bool loadResource(string type,out ResourceVec resources) onexception(false); 
        bool loadResources(StrVec types,out TypeResources typeResources) onexception(false); 
        bool loadResourcesPrefix(string typePrefix,out TypeResources typeResources) onexception(false); 

        bool updateLoadResource(string type,Resource resource,out ResourceVec resources) onexception(false);
        bool updateLoadResourcePrefix(string type,Resource resource,string typePrefix,out TypeResources typeResources) onexception(false);
    }; 

    interface DistanceServer 
    {
        bool sortDists(string srcHost,double srcLongitude,double srcLatitude,StrVec dstHosts,out IntVec dstDists,out IntVec sortIdxs) onexception(false); 
    };

    struct LogMessage
    {
        int _level; 
        string _mod; 
        string _info; 
    }; 
    map LogMessages<long,LogMessage>;

    struct LogServiceRecord
    {
        string _mod; 
        Common.StrStrMap _info; 
    }; 
    map LogServiceRecords<long,LogServiceRecord>;

    interface LogServer 
    {
        bool logs(string app,LogMessages msgs) async onexception(false);
        bool logRecord(string app,LogServiceRecords records) async onexception(false);
    };
}; 

