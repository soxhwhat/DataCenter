//
// ****************************************************************
// Copyright(c) 2008-2013 uvisual,inc. All rights reserved.
// ****************************************************************
//
// Auto generated from: ClientConfig.def
// Warning: do not edit this file.
//
package Config;

public final class ClientConfigAgent {
    public final Common.ObjectAgent __agent;

    public ClientConfigAgent(Common.ObjectAgent agent) {
        this.__agent = agent;
    }

    public final boolean getConfig(final java.util.Map<String,String > params,Common.Holder.String resultJson,final Common.CallParams __params) {
        return getConfig(__agent,params,resultJson,__params);
    }

    public final void getConfig_begin(final Common.AgentAsync __async,final java.util.Map<String,String > params,final Common.CallParams __params,final Object __userdata) {
        getConfig_begin(__agent,__async,params,__params,__userdata);
    }

    public static final boolean getConfig(final Common.ObjectAgent __agent,final java.util.Map<String,String > params,Common.Holder.String resultJson,final Common.CallParams __params) {
        try {
        int __loop = 0;
        while (true) {
            Common.OputStream __oput = new Common.OputStream();
            Common.VerList __vers = __agent.verList("getConfig.ClientConfig.ClientConfig");
            short __ver = 0;
            if (__vers != null) {
                __ver = __vers.ver(true);
                if (__ver > 0) __ver = 0;
            }
            switch (__ver) {
            case 0:
                __oput.write((short)1);
                __oput.write((short)__ver);
                Common.StrStrMap.__write(__oput,params);
                break;
            default: throw new Common.Exception("agent-error:ver error");
            }
            Common.IputStream.Holder __iput = new Common.IputStream.Holder();
            int __rslt = __agent.ex_sync("getConfig.ClientConfig.ClientConfig",__oput,__iput,__params);
            if ((__rslt>>16) != 0) {
                assert((__rslt>>16) == 1); 
                __loop ++;if (__loop >= 3) throw new Common.Exception("agent-error:vers error");
                continue;
            }
            boolean __ret;
            switch (__rslt) {
            case 0:
                __ret = __iput.value.readBool();
                if (resultJson == null) resultJson = new Common.Holder.String();resultJson.value = __iput.value.readString();
                break;
            default: throw new Common.Exception("agent-error:vers error");
            }
            Common.ObjectAgent.processFinal(__iput.value);
            return __ret;
        }
        }
        catch (Common.Exception ex) {
            Common.ObjectAgent.processFinal(ex);
            if (resultJson != null) resultJson.value = "";
            return false;
        }
    }

    public static final void getConfig_begin(final Common.ObjectAgent __agent,final Common.AgentAsync __async,final java.util.Map<String,String > params,final Common.CallParams __params,final Object __userdata) {
        (new Common.AgentAsync() {
            public final void start() {
                try {
                    Common.OputStream __oput = new Common.OputStream();
                    Common.VerList __vers = __agent.verList("getConfig.ClientConfig.ClientConfig");
                    short __ver = 0;
                    if (__vers != null) {
                        __ver = __vers.ver(true);
                        if (__ver > 0) __ver = 0;
                    }
                    switch (__ver) {
                    case 0:
                        __oput.write((short)1);
                        __oput.write((short)__ver);
                        Common.StrStrMap.__write(__oput,params);
                        break;
                    default: throw new Common.Exception("agent-error:vers error");
                    }
                    __agent.ex_async(this,"getConfig.ClientConfig.ClientConfig",__oput,__params,0);
                }
                catch (Common.Exception ex) {
                    if (__async != null) Common.ObjectAgent.throwException(__async,ex,__userdata);
                }
            }
            public final void cmdResult(int __rslt,Common.IputStream __iput,Object __userdata) {
                if ((__rslt>>16)!=1) {
                    if (__async != null) __async.cmdResult(__rslt,__iput,__userdata);
                    return;
                }
                __loop ++;
                if (__loop >= 3) {
                    if (__async != null) Common.ObjectAgent.throwException(__async,new Common.Exception("agent-error:vers error"),__userdata);
                    return;
                }
                start();
            }
            private int __loop = 0;
        }).start();
    }

    public static final boolean getConfig_end(int __rslt,Common.IputStream __iput,Common.Holder.String resultJson) {
        try {
            Common.ObjectAgent.processFirst(__rslt,__iput);
            assert((__rslt>>16) == 0);
            boolean __ret;
            switch (__rslt) {
            case 0:
                __ret = __iput.readBool();
                if (resultJson == null) resultJson = new Common.Holder.String();resultJson.value = __iput.readString();
                break;
            default: throw new Common.Exception("agent-error:vers error");
            }
            Common.ObjectAgent.processFinal(__iput);
            return __ret;
        }
        catch (Common.Exception ex) {
            Common.ObjectAgent.processFinal(ex);
            if (resultJson != null) resultJson.value = "";
            return false;
        }
    }
}
