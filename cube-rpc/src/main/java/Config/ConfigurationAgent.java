//
// ****************************************************************
// Copyright(c) 2008-2013 uvisual,inc. All rights reserved.
// ****************************************************************
//
// Auto generated from: def
// Warning: do not edit this file.
//
package Config;

public final class ConfigurationAgent {
    public final Common.ObjectAgent __agent;

    public ConfigurationAgent(Common.ObjectAgent agent) {
        this.__agent = agent;
    }

    public final boolean getClientConfig(final ConfigInfo info, Common.StrStrMap.Holder configMap, Common.Holder.Long timestamps, final Common.CallParams __params) {
        return getClientConfig(__agent,info,configMap,timestamps,__params);
    }

    public final void getClientConfig_begin(final Common.AgentAsync __async,final ConfigInfo info,final Common.CallParams __params,final Object __userdata) {
        getClientConfig_begin(__agent,__async,info,__params,__userdata);
    }

    public static final boolean getClientConfig(final Common.ObjectAgent __agent,final ConfigInfo info,Common.StrStrMap.Holder configMap,Common.Holder.Long timestamps,final Common.CallParams __params) {
        try {
        int __loop = 0;
        while (true) {
            Common.OputStream __oput = new Common.OputStream();
            Common.VerList __vers = __agent.verList("getClientConfig.Configuration.Config");
            short __ver = 0;
            if (__vers != null) {
                __ver = __vers.ver(true);
                if (__ver > 0) __ver = 0;
            }
            switch (__ver) {
            case 0:
                __oput.write((short)1);
                __oput.write((short)__ver);
                ConfigInfo.__write(__oput,info);
                break;
            default: throw new Common.Exception("agent-error:ver error");
            }
            Common.IputStream.Holder __iput = new Common.IputStream.Holder();
            int __rslt = __agent.ex_sync("getClientConfig.Configuration.Config",__oput,__iput,__params);
            if ((__rslt>>16) != 0) {
                assert((__rslt>>16) == 1); 
                __loop ++;if (__loop >= 3) throw new Common.Exception("agent-error:vers error");
                continue;
            }
            boolean __ret;
            switch (__rslt) {
            case 0:
                __ret = __iput.value.readBool();
                if (configMap == null) configMap = new Common.StrStrMap.Holder();configMap.value = Common.StrStrMap.__read(__iput.value);
                if (timestamps == null) timestamps = new Common.Holder.Long();timestamps.value = __iput.value.readLong();
                break;
            default: throw new Common.Exception("agent-error:vers error");
            }
            Common.ObjectAgent.processFinal(__iput.value);
            return __ret;
        }
        }
        catch (Common.Exception ex) {
            Common.ObjectAgent.processFinal(ex);
            if (configMap != null) configMap.value = null;
            if (timestamps != null) timestamps.value = (long)0;
            return false;
        }
    }

    public static final void getClientConfig_begin(final Common.ObjectAgent __agent,final Common.AgentAsync __async,final ConfigInfo info,final Common.CallParams __params,final Object __userdata) {
        (new Common.AgentAsync() {
            public final void start() {
                try {
                    Common.OputStream __oput = new Common.OputStream();
                    Common.VerList __vers = __agent.verList("getClientConfig.Configuration.Config");
                    short __ver = 0;
                    if (__vers != null) {
                        __ver = __vers.ver(true);
                        if (__ver > 0) __ver = 0;
                    }
                    switch (__ver) {
                    case 0:
                        __oput.write((short)1);
                        __oput.write((short)__ver);
                        ConfigInfo.__write(__oput,info);
                        break;
                    default: throw new Common.Exception("agent-error:vers error");
                    }
                    __agent.ex_async(this,"getClientConfig.Configuration.Config",__oput,__params,0);
                }
                catch (Common.Exception ex) {
                    if (__async != null) Common.ObjectAgent.throwException(__async,ex,__userdata);
                }
            }
            public final void cmdResult(int __rslt,Common.IputStream __iput,Object __userdata) {
                if ((__rslt>>16)!=1) {
                    if (__async != null) __async.cmdResult(__rslt,__iput,__userdata);
                    return;
                }
                __loop ++;
                if (__loop >= 3) {
                    if (__async != null) Common.ObjectAgent.throwException(__async,new Common.Exception("agent-error:vers error"),__userdata);
                    return;
                }
                start();
            }
            private int __loop = 0;
        }).start();
    }

    public static final boolean getClientConfig_end(int __rslt,Common.IputStream __iput,Common.StrStrMap.Holder configMap,Common.Holder.Long timestamps) {
        try {
            Common.ObjectAgent.processFirst(__rslt,__iput);
            assert((__rslt>>16) == 0);
            boolean __ret;
            switch (__rslt) {
            case 0:
                __ret = __iput.readBool();
                if (configMap == null) configMap = new Common.StrStrMap.Holder();configMap.value = Common.StrStrMap.__read(__iput);
                if (timestamps == null) timestamps = new Common.Holder.Long();timestamps.value = __iput.readLong();
                break;
            default: throw new Common.Exception("agent-error:vers error");
            }
            Common.ObjectAgent.processFinal(__iput);
            return __ret;
        }
        catch (Common.Exception ex) {
            Common.ObjectAgent.processFinal(ex);
            if (configMap != null) configMap.value = null;
            if (timestamps != null) timestamps.value = (long)0;
            return false;
        }
    }
}
