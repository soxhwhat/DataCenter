<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.12.RELEASE</version>
    </parent>

    <groupId>com.juphoon.rtc.datacenter</groupId>
    <artifactId>jrtcDataCenter-Parent</artifactId>
    <version>2203.5.23</version>
    <packaging>pom</packaging>

    <modules>
        <module>data-core</module>
        <module>service-core</module>
        <module>dist</module>
        <module>test</module>
        <module>report-aggregate</module>
    </modules>

    <properties>
        <java.version>1.8</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <spring-cloud.version>Hoxton.SR8</spring-cloud.version>
        <spring-boot.version>2.3.12.RELEASE</spring-boot.version>

        <cube-starter.version>36.6.5.8</cube-starter.version>
        <cube-event.version>36.6.5.8</cube-event.version>
        <cube-def.version>2203.1.16</cube-def.version>
        <jrtc-domain.version>2203.3.18</jrtc-domain.version>
        <jrtc-po.version>2203.3.20</jrtc-po.version>
        <jrtc-event.version>2203.3.20</jrtc-event.version>

        <mybatis.version>3.5.10</mybatis.version>
        <iron-utils.version>2.0.1</iron-utils.version>
        <alibaba.druid.version>1.1.9</alibaba.druid.version>
        <p6spy.version>3.8.7</p6spy.version>
        <mybatis-plus.version>3.5.1</mybatis-plus.version>
        <ojdbc6.version>11.2.0.4</ojdbc6.version>
        <httpclient.version>4.5.7</httpclient.version>
        <guava.version>31.1-jre</guava.version>
        <logback.version>1.2.11</logback.version>
        <sqlite.jdbc.version>3.36.0.1</sqlite.jdbc.version>
        <cn-hutool.version>5.7.9</cn-hutool.version>
        <jackson.version>2.13.3</jackson.version>
        <commons-lang3.version>3.9</commons-lang3.version>
        <dom4j.version>2.1.1</dom4j.version>
        <commons-collections4.version>4.1</commons-collections4.version>
        <slf4j.version>1.7.30</slf4j.version>
        <easymock.version>3.4</easymock.version>
        <powermock.version>2.0.9</powermock.version>
        <jasypt.version>3.0.2</jasypt.version>
        <validation-api.version>2.0.1.Final</validation-api.version>
        <findbugs.version>3.0.1</findbugs.version>
        <maven-source-plugin.versoin>3.0.1</maven-source-plugin.versoin>
        <git-commit-id-plugin.version>4.0.0</git-commit-id-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
        <maven-surefire-plugin.version>3.0.0-M3</maven-surefire-plugin.version>
        <findbugs-maven-plugin.version>3.0.5</findbugs-maven-plugin.version>
        <maven-pmd-plugin.version>3.8</maven-pmd-plugin.version>

        <netty.version>4.1.71.Final</netty.version>
        <netty.tcnative.version>2.0.46.Final</netty.tcnative.version>
        <tomcat.version>9.0.63</tomcat.version>

    </properties>

    <dependencies>
        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
            <version>${sqlite.jdbc.version}</version>
        </dependency>
        <dependency>
            <groupId>com.juphoon.iron.cube</groupId>
            <artifactId>cube-spring-boot-starter</artifactId>
            <version>${cube-starter.version}</version>
        </dependency>

        <dependency>
            <groupId>com.juphoon.cube.def</groupId>
            <artifactId>cube-def-36</artifactId>
            <version>${cube-def.version}</version>
        </dependency>

        <dependency>
            <groupId>com.juphoon.cube.def</groupId>
            <artifactId>jrtc-domain</artifactId>
            <version>${jrtc-domain.version}</version>
        </dependency>

        <dependency>
            <groupId>com.juphoon.cube.def</groupId>
            <artifactId>jrtc-po</artifactId>
            <version>${jrtc-po.version}</version>
        </dependency>

        <dependency>
            <groupId>com.juphoon.cube.def</groupId>
            <artifactId>jrtc-event</artifactId>
            <version>${jrtc-event.version}</version>
        </dependency>

        <dependency>
            <groupId>com.juphoon.iron.cube</groupId>
            <artifactId>cube-event</artifactId>
            <version>${cube-event.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-core</artifactId>
            <version>${tomcat.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-websocket</artifactId>
            <version>${tomcat.version}</version>
        </dependency>

        <!--        <dependency>-->
        <!--            <groupId>io.netty</groupId>-->
        <!--            <artifactId>netty-tcnative-classes</artifactId>-->
        <!--            <version>${netty.tcnative.version}</version>-->
        <!--        </dependency>-->


        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>${validation-api.version}</version>
        </dependency>


        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons-lang3.version}</version>
        </dependency>
        <dependency>
            <groupId>com.github.ulisesbocchio</groupId>
            <artifactId>jasypt-spring-boot-starter</artifactId>
            <version>${jasypt.version}</version>
        </dependency>
        <dependency>
            <groupId>org.dom4j</groupId>
            <artifactId>dom4j</artifactId>
            <version>${dom4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>${commons-collections4.version}</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
            <version>${easymock.version}</version>
        </dependency>

        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito2</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco-maven-plugin.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>findbugs</artifactId>
            <version>${findbugs.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.7.1</version>
            </plugin>

            <!--批量修改版本号-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.7</version>
            </plugin>

            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>

            <!--单元测试-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
            </plugin>

            <!--findbugs 插件-->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${findbugs-maven-plugin.version}</version>
                <configuration>
                    <!-- 设置分析工作的等级，可以为Min、Default和Max -->
                    <effort>Default</effort>
                    <!-- Low、Medium和High (Low最严格) High只扫描严重错误。建议用Medium-->
                    <threshold>Medium</threshold>

                    <!-- 失败终止编译-->
                    <failOnError>true</failOnError>

                    <includeTests>true</includeTests>
                    <findbugsXmlOutput>true</findbugsXmlOutput>
                    <xmlOutput>true</xmlOutput>
                    <!-- 排除不需要扫描的类 -->
                    <excludeFilterFile>${user.dir}/conf/findbugs-exclude.xml</excludeFilterFile>
                </configuration>
                <executions>
                    <execution>
                        <id>findbugs-check</id>
                        <phase>package</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--PMD静态检查-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven-pmd-plugin.version}</version>
                <configuration>
                    <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
                    <targetJdk>${java.version}</targetJdk>
                    <printFailingErrors>true</printFailingErrors>
                    <!-->失败终止编译开关</-->
                    <!--                    <failOnViolation>true</failOnViolation>-->
                    <!--                    <failurePriority>1</failurePriority>-->
                    <!-- 代码检查规则 -->
                    <rulesets>
                        <ruleset>rulesets/java/ali-comment.xml</ruleset>
                        <ruleset>rulesets/java/ali-concurrent.xml</ruleset>
                        <ruleset>rulesets/java/ali-constant.xml</ruleset>
                        <ruleset>rulesets/java/ali-exception.xml</ruleset>
                        <ruleset>rulesets/java/ali-flowcontrol.xml</ruleset>
                        <ruleset>rulesets/java/ali-naming.xml</ruleset>
                        <ruleset>rulesets/java/ali-oop.xml</ruleset>
                        <ruleset>rulesets/java/ali-orm.xml</ruleset>
                        <ruleset>rulesets/java/ali-other.xml</ruleset>
                        <ruleset>rulesets/java/ali-set.xml</ruleset>
                    </rulesets>
                    <failOnViolation>true</failOnViolation>
                    <failurePriority>5</failurePriority>

                    <!-- 排除不需要扫描的类 -->
                    <excludes>
                        <exclude>**/Account/*.java</exclude>
                        <exclude>**/AuthServer/*.java</exclude>
                        <exclude>**/PortalPlatform/*.java</exclude>
                        <exclude>**/DataCollection/*.java</exclude>
                        <exclude>**/Event/*.java</exclude>
                        <exclude>**/Config/*.java</exclude>
                    </excludes>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>com.alibaba.p3c</groupId>
                        <artifactId>p3c-pmd</artifactId>
                        <version>1.3.6</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>pmd-check</id>
                        <phase>package</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco-maven-plugin.version}</version>
                <configuration>
                    <!--                    <destFile>${basedir}/target/site/jacoco/jacoco.exec</destFile>-->
                    <!--                    <dataFile>${basedir}/target/site/jacoco/jacoco.exec</dataFile>-->
                    <output>file</output>
                    <append>true</append>
                    <!--                        <includes>-->
                    <!--                            <include>com/juphoon/unit/test/controller/*</include>-->
                    <!--                            <include>com/juphoon/unit/test/impl/impl/*</include>-->
                    <!--                        </includes>-->
                    <rules>
                        <rule implementation="org.jacoco.maven.RuleConfiguration">
                            <element>BUNDLE</element>
                            <limits>　　
                                <!-- 指定方法覆蓋到50% -->
                                <limit implementation="org.jacoco.report.check.Limit">
                                    <counter>METHOD</counter>
                                    <value>COVEREDRATIO</value>
                                    <minimum>0.2</minimum>
                                </limit>
                                <!-- 指定分支覆蓋到50% -->
                                <!--                                <limit implementation="org.jacoco.report.check.Limit">-->
                                <!--                                    <counter>BRANCH</counter>-->
                                <!--                                    <value>COVEREDRATIO</value>-->
                                <!--                                    <minimum>1.0</minimum>-->
                                <!--                                </limit>-->
                                <!-- 指定類覆蓋到100%，不能遺失任何類 -->
                                <limit implementation="org.jacoco.report.check.Limit">
                                    <counter>CLASS</counter>
                                    <value>COVEREDRATIO</value>
                                    <maximum>0.2</maximum>
                                </limit>
                            </limits>
                        </rule>
                    </rules>
                </configuration>
                <executions>
                    <execution>
                        <id>pre-test</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>post-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>2.3</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>${findbugs-maven-plugin.version}</version>
                <configuration>
                    <skipEmptyReport>false</skipEmptyReport>
                    <findbugsXmlOutput>true</findbugsXmlOutput>
                    <xmlOutput>true</xmlOutput>
                    <excludeFilterFile>${user.dir}/conf/findbugs-exclude.xml</excludeFilterFile>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>${maven-pmd-plugin.version}</version>
                <configuration>
                    <skipEmptyReport>false</skipEmptyReport>
                    <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
                    <targetJdk>${java.version}</targetJdk>
                    <printFailingErrors>true</printFailingErrors>
                    <!-- 排除不需要扫描的类 -->
                    <excludes>
                        <exclude>**/Account/*.java</exclude>
                        <exclude>**/AuthServer/*.java</exclude>
                        <exclude>**/PortalPlatform/*.java</exclude>
                        <exclude>**/DataCollection/*.java</exclude>
                        <exclude>**/Event/*.java</exclude>
                        <exclude>**/Config/*.java</exclude>
                    </excludes>
                    <rulesets>
                        <ruleset>rulesets/java/ali-comment.xml</ruleset>
                        <ruleset>rulesets/java/ali-concurrent.xml</ruleset>
                        <ruleset>rulesets/java/ali-constant.xml</ruleset>
                        <ruleset>rulesets/java/ali-exception.xml</ruleset>
                        <ruleset>rulesets/java/ali-flowcontrol.xml</ruleset>
                        <ruleset>rulesets/java/ali-naming.xml</ruleset>
                        <ruleset>rulesets/java/ali-oop.xml</ruleset>
                        <ruleset>rulesets/java/ali-orm.xml</ruleset>
                        <ruleset>rulesets/java/ali-other.xml</ruleset>
                        <ruleset>rulesets/java/ali-set.xml</ruleset>
                    </rulesets>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>3.0.0</version>
                <reportSets>
                    <reportSet>
                        <configuration>
                            <skip>true</skip>
                            <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
                        </configuration>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
            </plugin>
        </plugins>
    </reporting>


</project>